name: Tests

on:
  - push

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: python:3.9.17

    env:
      DB_ENGINE: django.contrib.gis.db.backends.postgis
      DB_NAME: admg
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres # 127.0.0.1
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: config.settings.local
      DJANGO_SECRET_KEY: "secret key here"
      DJANGO_ADMIN_URL: admg/
      GH_TOKEN: faketokenhere
      GCMD_SYNC_SOURCE_EMAIL: gcmdadmg@localhost
      GCMD_SYNC_RECIPIENTS: gcmd@localhost

    services:
      postgres:
        image: postgis/postgis:13-3.2
        env:
          POSTGRES_DB: admg
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9.17"

      - name: Install GDAL
        run: |
          apt-get update -y
          apt-get install -y libgdal-dev

      - uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('app/requirements/base.txt') }}-${{ hashFiles('app/requirements/local.txt') }}

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install \
            --upgrade \
            --upgrade-strategy eager \
            -r app/requirements/base.txt \
            -r app/requirements/local.txt

      - name: Check for missing migrations
        run: |
          python app/manage.py makemigrations --check --dry-run

      - name: Run Tests
        run: |
          coverage run -m pytest
          coverage report -m --skip-covered
          coverage json -o coverage.json

      - name: Save Code Coverage
        uses: actions/upload-artifact@v2
        with:
          name: code_coverage
          path: coverage.json

  compare-coverage:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref_name != 'dev'}}

    steps:
      - uses: actions/checkout@v2

      - name: Get Commit Coverage
        uses: actions/download-artifact@v3
        with:
          name: code_coverage
          path: new_cov

      - name: Get Dev Coverage
        uses: dawidd6/action-download-artifact@v2
        with:
          branch: dev
          name: code_coverage
          path: dev_cov
          if_no_artifact_found: fail

      - name: Calculate Coverage
        id: calculate_coverage
        run: |
          new_cov=$(cat ./new_cov/coverage.json)
          echo "new_cov=${new_cov//'%'/'%25'}" >> $GITHUB_OUTPUT
          dev_cov=$(cat ./dev_cov/coverage.json)
          echo "dev_cov=${dev_cov//'%'/'%25'}" >> $GITHUB_OUTPUT

      - name: Compare Coverage
        id: compare_coverage
        run: |
          dev_total="${{fromJson(steps.calculate_coverage.outputs.dev_cov).totals.percent_covered}}"
          new_total="${{fromJson(steps.calculate_coverage.outputs.new_cov).totals.percent_covered}}"
          coverage_diff=$(echo "$dev_total - $new_total" | bc -l)
          (( $(echo "$coverage_diff > 1.0" | bc -l) )) && result=failure || result=success
          echo "Coverage comparison: $result"

      - name: Report result
        if: ${{steps.compare_coverage.outputs.result=='failure'}}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Test coverage on source branch is lower than on dev branch')
