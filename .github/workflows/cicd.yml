name: CI/CD

on:
  - push

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          black: true
          flake8: true
          flake8_args: "--ignore E1,E2,E3,E5,W1,W2,W3,W5" # black already handles formatting, this prevents conflicts

  deploy-to-staging:
    needs: run-linters
    if: github.ref_name == 'dev'
    concurrency: staging

    uses: "./.github/workflows/deploy.yml"
    secrets: inherit # pass all secrets
    with:
      role-to-assume: "arn:aws:iam::854573354511:role/admg-ci-role"
      role-session-name: "admg-backend-github-staging-deployment"
      environment: "dev"
      aws-region: "us-west-2"
      vpc-id: "vpc-0caf6f6042c6f2b7c"
      domain-name: "admgstaging.nasa-impact.net"
      django-debug: false
      alb-listener-arn: "arn:aws:elasticloadbalancing:us-west-2:854573354511:loadbalancer/app/admg-backend-loadbalancer/076ac577e623b5be"

  deploy-to-production:
    needs: run-linters
    if: github.ref_name == 'prod'
    concurrency: production

    uses: "./.github/workflows/deploy.yml"
    secrets: inherit # pass all secrets
    with:
      role-to-assume: "arn:aws:iam::854573354511:role/admg-ci-role"
      role-session-name: "admg-backend-github-production-deployment"
      environment: "prod"
      aws-region: "us-west-2"
      vpc-id: "vpc-0108360d661166fc3"
      domain-name: "admg.nasa-impact.net"
      django-debug: false
      alb-listener-arn: "arn:aws:elasticloadbalancing:us-west-2:854573354511:loadbalancer/app/admg-production-loadbalancer/441052bf67cffa76"

  notify-slack:
    needs: deploy-to-staging
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Get first line of commit message
        id: commit-msg
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: echo "::set-output name=first-line::${COMMIT_MSG%%$'\n*'}"

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: "admg"
          payload: '{"text":"Successfully deployed MI to Staging! <https://admgstaging.nasa-impact.net/|Click here> to take a look!"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

notify-slack:
  needs: deploy-to-production
  runs-on: ubuntu-latest
  if: ${{ success() }}
  steps:
    - name: Get first line of commit message
      id: commit-msg
      env:
        COMMIT_MSG: ${{ github.event.head_commit.message }}
      run: echo "::set-output name=first-line::${COMMIT_MSG%%$'\n*'}"

    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: "admg"
        payload: '{"text":"Successfully deployed MI to Production! <https://admgstaging.nasa-impact.net/|Click here> to take a look!"}'
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
