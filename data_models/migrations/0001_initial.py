# Generated by Django 2.0.8 on 2020-03-27 13:54

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AircraftType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
                ('gcmd_translation', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_internal', models.CharField(max_length=256)),
                ('notes_public', models.CharField(max_length=256)),
                ('description_short', models.CharField(max_length=2048)),
                ('description_long', models.CharField(max_length=2048)),
                ('focus_phenomena', models.CharField(max_length=1024)),
                ('region_description', models.CharField(max_length=1024)),
                ('spatial_bounds', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('funding_agency', models.CharField(max_length=256)),
                ('funding_program', models.CharField(max_length=256)),
                ('funding_program_lead', models.CharField(max_length=256)),
                ('project_lead', models.CharField(max_length=256)),
                ('technical_contact', models.CharField(max_length=256)),
                ('nonaircraft_platforms', models.CharField(max_length=1024)),
                ('nonaircraft_instruments', models.CharField(max_length=1024)),
                ('number_flights', models.PositiveIntegerField()),
                ('nasa_mission', models.CharField(max_length=512)),
                ('number_data_products', models.PositiveIntegerField()),
                ('data_volume', models.CharField(max_length=256)),
                ('doi', models.CharField(max_length=1024)),
                ('repository_website', models.CharField(max_length=512)),
                ('project_website', models.CharField(max_length=512)),
                ('publication_links', models.CharField(max_length=2048)),
                ('other_resources', models.CharField(max_length=2048)),
                ('is_ongoing', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Deployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_internal', models.CharField(max_length=256)),
                ('notes_public', models.CharField(max_length=256)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('number_flights', models.PositiveIntegerField()),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deployments', to='data_models.Campaign')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('asp_long_name', models.CharField(max_length=512)),
                ('tail_number', models.CharField(max_length=128)),
                ('home_base', models.CharField(max_length=256)),
                ('campaign_deployment_base', models.CharField(max_length=256)),
                ('platform_owner', models.CharField(max_length=256)),
                ('platform_technical_contact', models.CharField(max_length=256)),
                ('instrument_information_source', models.CharField(max_length=1024)),
                ('notes_internal', models.CharField(max_length=2048)),
                ('notes_public', models.CharField(max_length=2048)),
                ('deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flights', to='data_models.Deployment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FocusArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GcmdInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
                ('instrument_category', models.CharField(max_length=256)),
                ('instrument_class', models.CharField(max_length=256)),
                ('instrument_type', models.CharField(max_length=256)),
                ('instrument_subtype', models.CharField(max_length=256)),
                ('gcmd_uuid', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GcmdPhenomena',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('category', models.CharField(max_length=256)),
                ('topic', models.CharField(max_length=256)),
                ('term', models.CharField(max_length=256)),
                ('variable_1', models.CharField(max_length=256)),
                ('variable_2', models.CharField(max_length=256)),
                ('variable_3', models.CharField(max_length=256)),
                ('gcmd_uuid', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GcmdPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
                ('category', models.CharField(max_length=256)),
                ('series_entry', models.CharField(max_length=256)),
                ('description', models.CharField(max_length=256)),
                ('gcmd_version', models.CharField(max_length=256)),
                ('source_link', models.CharField(max_length=256)),
                ('gcmd_uuid', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GcmdProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
                ('bucket', models.CharField(max_length=256)),
                ('gcmd_uuid', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicalRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeophysicalConcepts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomeBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
                ('gcmd_translation', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_internal', models.CharField(max_length=256)),
                ('notes_public', models.CharField(max_length=256)),
                ('description', models.CharField(max_length=256)),
                ('lead_investigator', models.CharField(max_length=256)),
                ('technical_contact', models.CharField(max_length=256)),
                ('facility', models.CharField(max_length=256)),
                ('funding_source', models.CharField(max_length=256)),
                ('spatial_resolution', models.CharField(max_length=256)),
                ('temporal_resolution', models.CharField(max_length=256)),
                ('radiometric_frequency', models.CharField(max_length=256)),
                ('calibration_information', models.CharField(max_length=1024)),
                ('deployment_date', models.DateField()),
                ('dates_of_operation', models.CharField(max_length=512)),
                ('data_products_per_level', models.CharField(max_length=256)),
                ('instrument_manufacturer', models.CharField(max_length=512)),
                ('online_information', models.CharField(max_length=2048)),
                ('instrument_doi', models.CharField(max_length=1024)),
                ('gcmd_instruments', models.ManyToManyField(related_name='instruments', to='data_models.GcmdInstrument')),
                ('geophysical_concepts', models.ManyToManyField(related_name='instruments', to='data_models.GeophysicalConcepts')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
                ('gcmd_translation', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IOP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_internal', models.CharField(max_length=256)),
                ('notes_public', models.CharField(max_length=256)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', models.CharField(max_length=1024)),
                ('region_description', models.CharField(max_length=512)),
                ('published_list', models.CharField(max_length=1024)),
                ('reports', models.CharField(max_length=1024)),
                ('reference_file', models.CharField(max_length=1024)),
                ('deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='iops', to='data_models.Deployment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurementKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurementRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerOrg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
                ('website', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_internal', models.CharField(max_length=256)),
                ('notes_public', models.CharField(max_length=256)),
                ('platform_model', models.CharField(max_length=256)),
                ('desciption', models.CharField(max_length=256)),
                ('online_information', models.CharField(max_length=512)),
                ('image_url', models.CharField(max_length=256)),
                ('gcmd_platform', models.ManyToManyField(related_name='platforms', to='data_models.GcmdPlatform')),
                ('platform_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='platforms', to='data_models.AircraftType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlatformType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
                ('example', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
                ('gcmd_translation', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_public', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignificantEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('short_name', models.CharField(max_length=256, unique=True)),
                ('long_name', models.CharField(max_length=512)),
                ('notes_internal', models.CharField(max_length=256)),
                ('notes_public', models.CharField(max_length=256)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', models.CharField(max_length=1024)),
                ('region_description', models.CharField(max_length=512)),
                ('published_list', models.CharField(max_length=1024)),
                ('reports', models.CharField(max_length=1024)),
                ('reference_file', models.CharField(max_length=1024)),
                ('deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='significant_events', to='data_models.Deployment')),
                ('iop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='significant_events', to='data_models.IOP')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='instrument',
            name='instrument_types',
            field=models.ManyToManyField(related_name='instruments', to='data_models.InstrumentType'),
        ),
        migrations.AddField(
            model_name='instrument',
            name='measurement_keywords',
            field=models.ManyToManyField(related_name='instruments', to='data_models.MeasurementKeyword'),
        ),
        migrations.AddField(
            model_name='instrument',
            name='measurement_regions',
            field=models.ManyToManyField(related_name='instruments', to='data_models.MeasurementRegion'),
        ),
        migrations.AddField(
            model_name='instrument',
            name='repositories',
            field=models.ManyToManyField(related_name='instruments', to='data_models.Repository'),
        ),
        migrations.AddField(
            model_name='flight',
            name='instruments',
            field=models.ManyToManyField(related_name='flights', to='data_models.Instrument'),
        ),
        migrations.AddField(
            model_name='flight',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flights', to='data_models.Platform'),
        ),
        migrations.AddField(
            model_name='deployment',
            name='geographical_regions',
            field=models.ManyToManyField(related_name='deployments', to='data_models.GeographicalRegion'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='focus_areas',
            field=models.ManyToManyField(related_name='campaigns', to='data_models.FocusArea'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='gcmd_phenomenas',
            field=models.ManyToManyField(related_name='campaigns', to='data_models.GcmdPhenomena'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='gcmd_project',
            field=models.ManyToManyField(related_name='campaigns', to='data_models.GcmdProject'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='partner_orgs',
            field=models.ManyToManyField(related_name='campaigns', to='data_models.PartnerOrg'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='platform_types',
            field=models.ManyToManyField(related_name='campaigns', to='data_models.PlatformType'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='repositories',
            field=models.ManyToManyField(related_name='campaigns', to='data_models.Repository'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='seasons',
            field=models.ManyToManyField(related_name='campaigns', to='data_models.Season'),
        ),
    ]
