version: "3.7"

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    # command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 -w 4 --timeout 300 --worker-tmp-dir /dev/shm
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
    expose:
      - 8000
    env_file:
      - .env.web
      - .env
    environment:
      - MIGRATE=true
    entrypoint: /bin/bash
    stdin_open: true
    tty: true

  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    environment:
      - RESOLVERS=127.0.0.11
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
      - morecerts:/etc/acme.sh
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web

  nginx-proxy-letsencrypt:
    image: nginxproxy/acme-companion:latest
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - morecerts:/etc/acme.sh
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - ./nginx/vhost.d:/etc/nginx/vhost.d
    depends_on:
      - nginx-proxy
  # rabbitmq:
  #   container_name: rabbitmq
  #   hostname: rabbitmq
  #   image: rabbitmq:latest
  #   ports:
  #     - "5672:5672"
  #   restart: on-failure

  # celery_worker:
  #   command: celery -A config worker -l info
  #   container_name: celery_worker
  #   hostname: celery_worker
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile.prod
  #   restart: on-failure
  #   env_file:
  #     - .env
  #   environment:
  #     - MIGRATE=false
  #   depends_on:
  #     - web
  #     - rabbitmq

volumes:
  postgres_data:
  static_volume:
  media_volume:
  morecerts:
  certs:
  html:
