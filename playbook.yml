- hosts: all
  remote_user: ubuntu
  become: true
  vars:
    user: ubuntu
    git_repo: git@github.com:NASA-IMPACT/admg_webapp.git
    project_src: /home/ubuntu/admg_webapp/
    branch: master

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [
        'apt-transport-https',
        'ca-certificates',
        'curl',
        'git',
        'python3-pip',
        'python3-setuptools',
        'software-properties-common',
      ]

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: ["docker", "docker-compose"]

    - name: Create ssh key on the server
      openssh_keypair:
        owner: ubuntu 
        path: /home/ubuntu/.ssh/id_rsa

    - name: Link to the github
      become_user: '{{ user }}'
      git:
        accept_hostkey: yes
        repo: "{{ git_repo }}"
        dest: "{{ project_src }}"
        version: "{{ branch }}"

    - name: Tear down existing services
      docker_compose:
        project_src: "{{ project_src }}"
        state: absent
  
    - name: Create and start services
      docker_compose:
        project_src: "{{ project_src }}"
      register: output
  
    - debug:
        var: output
  
    - name: Run `docker-compose up` again
      docker_compose:
        project_src: "{{ project_src }}"
        build: no
      register: output
  
    - debug:
        var: output
  
    - name: Stop all services
      docker_compose:
        project_src: "{{ project_src }}"
        build: no
        stopped: yes
      register: output
  
    - debug:
        var: output
  
    - assert:
        that:
          - "not web.admg_webapp_web_1.state.running"
          - "not nginx.dev_nginx.state.running"
  
    - name: Restart services
      docker_compose:
        project_src: "{{ project_src }}"
        build: no
        restarted: yes
      register: output
  
    - debug:
        var: output
  
    - assert:
        that:
          - "web.admg_webapp_web_1.state.running"
          - "nginx.dev_nginx.state.running"
